@page "/terminal"
@inherits ComponentBase
@inject IJSRuntime JS

<div id="terminal">
    <pre>Welcome to Fake Terminal!</pre>
    <pre id="output" @ref="terminalOutput"></pre>
    <form @onsubmit=HandleInput>
        <input id="input-container" placeholder=">>" @bind="commandInput" @ref="commandInputReference" autofocus />
    </form>    
</div>

@code {
    private ElementReference terminalOutput;
    private ElementReference commandInputReference;
    private string commandInput { get; set; } = string.Empty;

    protected override async Task OnAfterRenderAsync(bool firstRender)  
    {
        await JS.InvokeVoidAsync("scrollToBottom");
        await commandInputReference.FocusAsync();
    }


    private async Task HandleInput()
    {
        string input = commandInput;
        commandInput = string.Empty;

        await ProcessCommand(input);
    }

    private async Task ProcessCommand(string input)
    {
        await JS.InvokeVoidAsync("scrollToBottom");

        string output = $">> {input}";
        await JS.InvokeVoidAsync("appendToTerminal", terminalOutput, output);

        // You can add logic here to interpret and execute commands
        if(input == "clear")
        {
            await JS.InvokeVoidAsync("clearTerminal");
        }
    }
}

