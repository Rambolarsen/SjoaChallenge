@inject IJSRuntime JS

<div class="input-wrapper">
    <div id="prefix-container">
        <span class="username">@Username</span>
        @if (!string.IsNullOrEmpty(Username))
        {
            <span>:</span>
        }
        <span class="location">@Location</span>
        @if (!string.IsNullOrEmpty(Location))
        {
            <span>$</span>
        } 
    </div>
    <div id="input-container">
        <input id="input-field" @bind="commandInput" @ref="commandInputReference" autofocus />
    </div>
</div>


@code {
    [Parameter] public string Username { get; set; } = string.Empty;
    [Parameter] public string Location { get; set; } = string.Empty;
    private ElementReference commandInputReference;
    private string commandInput { get; set; } = string.Empty;

    public string GetInput()
    {
        string input = commandInput;
        commandInput = string.Empty;

        StateHasChanged();
        return input;
    }

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        await JS.InvokeVoidAsync("scrollToBottom");
        await commandInputReference.FocusAsync();
    }
}
